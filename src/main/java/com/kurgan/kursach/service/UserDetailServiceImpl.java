package com.kurgan.kursach.service;import com.kurgan.kursach.models.Role;import com.kurgan.kursach.repository.UserDao;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.SimpleGrantedAuthority;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import java.util.HashSet;import java.util.Set;@Servicepublic class UserDetailServiceImpl implements UserDetailsService {    @Autowired    private UserDao userDao;    @Override    @Transactional(readOnly = true)    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {        com.kurgan.kursach.models.User user = userDao.findByUsername(username);        Set<GrantedAuthority> grantedAuthorities = new HashSet<>();        for (Role role: user.getRoles()){            grantedAuthorities.add(new SimpleGrantedAuthority(role.getName()));        }        return new User(user.getUsername(), user.getPassword(), grantedAuthorities);    }}